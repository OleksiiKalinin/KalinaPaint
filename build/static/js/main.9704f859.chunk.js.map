{"version":3,"sources":["store/toolState.js","components/SettingBar.jsx","store/canvasState.js","tools/Tool.js","tools/Brush.js","tools/Circle.js","tools/Line.js","tools/Rect.js","components/ToolBar.jsx","store/instances.js","components/Canvas.jsx","App.js","index.js"],"names":["tool","strokeStyle","makeAutoObservable","this","color","fillColor","width","lineWidth","SettingBar","observer","className","htmlFor","type","id","style","margin","defaultValue","min","max","onChange","e","toolState","setLineWidth","target","value","setStrokeColor","canvas","socket","sessionid","undoList","redoList","username","localFile","data","push","ctx","getContext","length","dataUrl","pop","toDataURL","img","Image","src","onload","clearRect","height","drawImage","Tool","destroyEvents","fillStyle","onmousemove","onmouseup","onmousedown","onmouseleave","Brush","isEraser","finishDraw","mouseDown","send","JSON","stringify","method","figure","mouseMoveHadler","bind","mouseDownHadler","beginPath","moveTo","pageX","offsetLeft","pageY","offsetTop","x","y","tempColor","tempStroke","tempWidth","lineTo","stroke","Circle","drawing","startX","startY","radius","saved","currentX","currentY","Math","sqrt","pow","rerender","arc","PI","fill","Line","x2","y2","x1","y1","Rect","w","h","rect","ToolBar","useState","activeButton","setActiveButton","setTool","parentNode","getAttribute","object","name","canvasState","index","onClick","marginLeft","setFillColor","changeColor","input","document","createElement","accept","onchange","reader","FileReader","onloadend","setLocalFile","result","readAsDataURL","files","click","a","href","download","originURL","Canvas","canvasRef","useRef","canvasWrapperRef","canvasFieldRef","canvasSize","setCanvasSize","params","useParams","setImage","image","current","crossOrigin","postImageHandler","useEffect","setCanvas","axios","get","then","res","catch","_","canvasBG","flag","isMouseDown","ResizeObserver","observe","window","size","fillRect","WebSocket","replace","setSocket","setSessionId","onopen","console","log","onmessage","msg","parse","drawHandler","resizeCanvas","file","round","draw","post","ref","onMouseDown","pushToUndo","onMouseUp","App","path","to","Date","toString","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9704f859.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\nclass ToolState {\r\n    tool = null;\r\n    strokeStyle = '#000000'; \r\n    \r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setTool(tool) {\r\n        this.tool = tool;\r\n    }\r\n\r\n    setFillColor(color) {\r\n        this.tool.fillColor = color;\r\n    }\r\n\r\n    setStrokeColor(color) {\r\n        this.strokeStyle = color;\r\n        this.tool.strokeStyle = this.strokeStyle;\r\n    }\r\n\r\n    setLineWidth(width) {\r\n        this.tool.lineWidth = width;\r\n    }\r\n}\r\n    \r\nexport default new ToolState();","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport toolState from '../store/toolState';\r\nimport '../styles/toolbar.scss';\r\n\r\nconst SettingBar = observer(() => {\r\n    return (\r\n        <div className={'toolbar settingbar'}>\r\n            <label htmlFor=\"line-width\">Line width</label>\r\n            <input \r\n                type=\"number\" \r\n                id=\"line-width\" \r\n                style={{margin: '0 15px 0 5px'}} \r\n                defaultValue={1} \r\n                min={1} max={50}\r\n                onChange={e => toolState.setLineWidth(e.target.value)} />\r\n            <label htmlFor=\"stroke-color\">Stroke color</label>\r\n            <input \r\n                type=\"color\" \r\n                id=\"stroke-color\" \r\n                style={{margin: '0 15px 0 5px'}} \r\n                onChange={e => toolState.setStrokeColor(e.target.value)}\r\n                value={toolState.strokeStyle} />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default SettingBar;","import { makeAutoObservable } from \"mobx\";\r\n\r\nclass CanvasState {\r\n    canvas = null;\r\n    socket = null;\r\n    sessionid = null;\r\n    undoList = [];\r\n    redoList = [];\r\n    username = '';\r\n    localFile = '';\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setUserName(username) {\r\n        this.username = username;\r\n    }\r\n    \r\n    setLocalFile(localFile) {\r\n        this.localFile = localFile;\r\n    }\r\n\r\n    setSocket(socket) {\r\n        this.socket = socket;\r\n    }\r\n\r\n    setSessionId(sessionid) {\r\n        this.sessionid = sessionid;\r\n    }\r\n\r\n    setCanvas(canvas) {\r\n        this.canvas = canvas;\r\n    }\r\n\r\n    pushToUndo(data) {\r\n        this.undoList.push(data);\r\n    }\r\n\r\n    pushToRedo(data) {\r\n        this.redoList.push(data);\r\n    }\r\n\r\n    undo() {\r\n        let ctx = this.canvas.getContext('2d');\r\n        if (this.undoList.length > 0) {\r\n            let dataUrl = this.undoList.pop();\r\n            this.redoList.push(this.canvas.toDataURL());\r\n            let img = new Image();\r\n            img.src = dataUrl;\r\n            img.onload = () => {\r\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n            }\r\n        } else {\r\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        }\r\n    }\r\n\r\n    redo() {\r\n        let ctx = this.canvas.getContext('2d');\r\n        if (this.redoList.length > 0) {\r\n            let dataUrl = this.redoList.pop();\r\n            this.undoList.push(this.canvas.toDataURL());\r\n            let img = new Image();\r\n            img.src = dataUrl;\r\n            img.onload = () => {\r\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n            }\r\n        }\r\n    }\r\n}\r\n    \r\nexport default new CanvasState();","export default class Tool {\r\n    constructor(canvas, socket, id){\r\n        this.canvas = canvas;\r\n        this.socket = socket;\r\n        this.id = id;\r\n        this.ctx = canvas.getContext('2d');\r\n        this.destroyEvents();\r\n    }\r\n\r\n    set fillColor(color) {\r\n        this.ctx.fillStyle = color;\r\n    }\r\n\r\n    set strokeStyle(color) {\r\n        this.ctx.strokeStyle = color;\r\n    }\r\n\r\n    set lineWidth(width) {\r\n        this.ctx.lineWidth = width;\r\n    }\r\n\r\n    destroyEvents() {\r\n        this.canvas.onmousemove = null;\r\n        this.canvas.onmouseup = null;\r\n        this.canvas.onmousedown = null;\r\n        this.canvas.onmouseleave = null;\r\n    }\r\n}","import Tool from \"./Tool\";\r\n\r\nclass Brush extends Tool {\r\n    constructor(canvas, socket, id, isEraser) {\r\n        super(canvas, socket, id);\r\n        this.isEraser = isEraser;\r\n        this.canvas.onmousemove = this.mouseMoveHadler.bind(this);\r\n        this.canvas.onmouseup = this.finishDraw.bind(this);\r\n        this.canvas.onmousedown = this.mouseDownHadler.bind(this);\r\n        this.canvas.onmouseleave = this.finishDraw.bind(this);\r\n    }\r\n\r\n    finishDraw = () => {\r\n        this.mouseDown = false;\r\n        this.socket.send(JSON.stringify({\r\n            method: 'draw',\r\n            id: this.id,\r\n            figure: {\r\n                type: 'finish'\r\n            }\r\n        }));\r\n    }\r\n\r\n    mouseDownHadler(e) {\r\n        this.mouseDown = true;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\r\n    }\r\n\r\n    mouseMoveHadler(e) {\r\n        if(this.mouseDown) {\r\n            this.socket.send(JSON.stringify({\r\n                method: 'draw',\r\n                id: this.id,\r\n                figure: {\r\n                    type: 'brush',\r\n                    x: e.pageX - e.target.offsetLeft,\r\n                    y: e.pageY - e.target.offsetTop,\r\n                    color: this.ctx.fillStyle,\r\n                    lineWidth: this.ctx.lineWidth,\r\n                    strokeStyle: this.ctx.strokeStyle,\r\n                    isEraser: this.isEraser\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    static draw(ctx, x, y, color, lineWidth, strokeStyle, isEraser) {\r\n        let tempColor = ctx.fillStyle; \r\n        let tempStroke = ctx.strokeStyle;\r\n        let tempWidth = ctx.lineWidth;\r\n        \r\n        if(isEraser) {\r\n            ctx.fillStyle = 'white';\r\n            ctx.strokeStyle = 'white';\r\n        } else {\r\n            ctx.fillStyle = color;\r\n            ctx.strokeStyle = strokeStyle;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.lineTo(x, y);\r\n        ctx.stroke();\r\n        ctx.fillStyle = tempColor;\r\n        ctx.strokeStyle = tempStroke;\r\n        ctx.lineWidth = tempWidth;\r\n    }\r\n}\r\n\r\nexport default Brush;","import Tool from \"./Tool\";\r\n\r\nclass Circle extends Tool {\r\n    constructor(canvas, socket, id) {\r\n        super(canvas, socket, id);\r\n        this.drawing = false;\r\n        this.canvas.onmousemove = this.mouseMoveHadler.bind(this);\r\n        this.canvas.onmouseup = this.finishDraw.bind(this);\r\n        this.canvas.onmousedown = this.mouseDownHadler.bind(this);\r\n        this.canvas.onmouseleave = this.finishDraw.bind(this);\r\n    }\r\n\r\n    finishDraw = () => {\r\n        this.mouseDown = false;\r\n        if(this.drawing)\r\n            this.socket.send(JSON.stringify({\r\n                method: 'draw',\r\n                id: this.id,\r\n                figure: {\r\n                    type: 'circle',\r\n                    x: this.startX,\r\n                    y: this.startY,\r\n                    radius: this.radius,\r\n                    color: this.ctx.fillStyle,\r\n                    lineWidth: this.ctx.lineWidth,\r\n                    strokeStyle: this.ctx.strokeStyle\r\n                }\r\n            }));\r\n        this.drawing = false;\r\n    }\r\n\r\n    mouseDownHadler(e) {\r\n        this.mouseDown = true;\r\n        this.ctx.beginPath();\r\n        this.startX = e.pageX - e.target.offsetLeft;\r\n        this.startY = e.pageY - e.target.offsetTop;\r\n        this.saved = this.canvas.toDataURL();\r\n    }\r\n\r\n    mouseMoveHadler(e) {\r\n        if(this.mouseDown) {\r\n            this.drawing = true;\r\n            let currentX = e.pageX - e.target.offsetLeft;\r\n            let currentY = e.pageY - e.target.offsetTop;\r\n            this.radius = Math.sqrt(Math.pow(currentX - this.startX, 2) + Math.pow(currentY - this.startY, 2));\r\n            this.rerender(this.startX, this.startY, this.radius);\r\n        }\r\n    }\r\n\r\n    rerender(x, y, radius) {\r\n        const img = new Image();\r\n        img.src = this.saved;\r\n        img.onload = () => {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n            this.ctx.fill();\r\n            this.ctx.stroke();\r\n        }\r\n    }\r\n    \r\n    static draw(ctx, x, y, radius, color, lineWidth, strokeStyle) {\r\n        let tempColor = ctx.fillStyle; \r\n        let tempStroke = ctx.strokeStyle;\r\n        let tempWidth = ctx.lineWidth;\r\n        \r\n        ctx.fillStyle = color;\r\n        ctx.strokeStyle = strokeStyle;\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = tempColor;\r\n        ctx.strokeStyle = tempStroke;\r\n        ctx.lineWidth = tempWidth;\r\n    }\r\n}\r\n\r\nexport default Circle;","import Tool from \"./Tool\";\r\n\r\nclass Line extends Tool {\r\n    constructor(canvas, socket, id) {\r\n        super(canvas, socket, id);\r\n        this.drawing = false;\r\n        this.canvas.onmousemove = this.mouseMoveHadler.bind(this);\r\n        this.canvas.onmouseup = this.finishDraw.bind(this);\r\n        this.canvas.onmousedown = this.mouseDownHadler.bind(this);\r\n        this.canvas.onmouseleave = this.finishDraw.bind(this);\r\n    }\r\n\r\n    finishDraw = () => {\r\n        this.mouseDown = false;\r\n        if(this.drawing)\r\n            this.socket.send(JSON.stringify({\r\n                method: 'draw',\r\n                id: this.id,\r\n                figure: {\r\n                    type: 'line',\r\n                    x: this.startX,\r\n                    y: this.startY,\r\n                    x2: this.currentX,\r\n                    y2: this.currentY,\r\n                    color: this.ctx.fillStyle,\r\n                    lineWidth: this.ctx.lineWidth,\r\n                    strokeStyle: this.ctx.strokeStyle\r\n                }\r\n            }));\r\n        this.drawing = false;\r\n    }\r\n\r\n    mouseDownHadler(e) {\r\n        this.mouseDown = true;\r\n        this.ctx.beginPath();\r\n        this.startX = e.pageX - e.target.offsetLeft;\r\n        this.startY = e.pageY - e.target.offsetTop;\r\n        this.saved = this.canvas.toDataURL();\r\n    }\r\n\r\n    mouseMoveHadler(e) {\r\n        if(this.mouseDown) {\r\n            this.drawing = true;\r\n            this.currentX = e.pageX - e.target.offsetLeft;\r\n            this.currentY = e.pageY - e.target.offsetTop;\r\n            this.rerender(this.startX, this.startY, this.currentX, this.currentY);\r\n        }\r\n    }\r\n\r\n    rerender(x1, y1, x2, y2) {\r\n        const img = new Image();\r\n        img.src = this.saved;\r\n        img.onload = () => {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(x1, y1);\r\n            this.ctx.lineTo(x2, y2);\r\n            this.ctx.stroke();\r\n        }\r\n    }\r\n\r\n    static draw(ctx, x1, y1, x2, y2, color, lineWidth, strokeStyle) {\r\n        let tempColor = ctx.fillStyle; \r\n        let tempStroke = ctx.strokeStyle;\r\n        let tempWidth = ctx.lineWidth;\r\n        \r\n        ctx.fillStyle = color;\r\n        ctx.strokeStyle = strokeStyle;\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.stroke();\r\n        ctx.fillStyle = tempColor;\r\n        ctx.strokeStyle = tempStroke;\r\n        ctx.lineWidth = tempWidth;\r\n    }\r\n}\r\n\r\nexport default Line;","import Tool from \"./Tool\";\r\n\r\nclass Rect extends Tool {\r\n    constructor(canvas, socket, id) {\r\n        super(canvas, socket, id);\r\n        this.drawing = false;\r\n        this.canvas.onmousemove = this.mouseMoveHadler.bind(this);\r\n        this.canvas.onmouseup = this.finishDraw.bind(this);\r\n        this.canvas.onmousedown = this.mouseDownHadler.bind(this);\r\n        this.canvas.onmouseleave = this.finishDraw.bind(this);\r\n    }\r\n\r\n    finishDraw = () => {\r\n        this.mouseDown = false;\r\n        if(this.drawing)\r\n            this.socket.send(JSON.stringify({\r\n                method: 'draw',\r\n                id: this.id,\r\n                figure: {\r\n                    type: 'rect',\r\n                    x: this.startX,\r\n                    y: this.startY,\r\n                    width: this.width,\r\n                    height: this.height,\r\n                    color: this.ctx.fillStyle,\r\n                    lineWidth: this.ctx.lineWidth,\r\n                    strokeStyle: this.ctx.strokeStyle\r\n                }\r\n            }));\r\n        this.drawing = false;\r\n    }\r\n\r\n    mouseDownHadler(e) {\r\n        this.mouseDown = true;\r\n        this.ctx.beginPath();\r\n        this.startX = e.pageX - e.target.offsetLeft;\r\n        this.startY = e.pageY - e.target.offsetTop;\r\n        this.saved = this.canvas.toDataURL();\r\n    }\r\n\r\n    mouseMoveHadler(e) {\r\n        if(this.mouseDown) {\r\n            this.drawing = true;\r\n            let currentX = e.pageX - e.target.offsetLeft;\r\n            let currentY = e.pageY - e.target.offsetTop;\r\n            this.width = currentX - this.startX; \r\n            this.height = currentY - this.startY; \r\n            this.rerender(this.startX, this.startY, this.width, this.height);\r\n        }\r\n    }\r\n\r\n    rerender(x, y, w, h) {\r\n        const img = new Image();\r\n        img.src = this.saved;\r\n        img.onload = () => {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.beginPath();\r\n            this.ctx.rect(x, y, w, h);\r\n            this.ctx.fill();\r\n            this.ctx.stroke();\r\n        }\r\n    }\r\n    \r\n    static draw(ctx, x, y, w, h, color, lineWidth, strokeStyle) {\r\n        let tempColor = ctx.fillStyle; \r\n        let tempStroke = ctx.strokeStyle;\r\n        let tempWidth = ctx.lineWidth;\r\n        \r\n        ctx.fillStyle = color;\r\n        ctx.strokeStyle = strokeStyle;\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.beginPath();\r\n        ctx.rect(x, y, w, h);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = tempColor;\r\n        ctx.strokeStyle = tempStroke;\r\n        ctx.lineWidth = tempWidth;\r\n    }\r\n}\r\n\r\nexport default Rect;","import React, { useState } from 'react';\r\nimport canvasState from '../store/canvasState';\r\nimport toolState from '../store/toolState';\r\nimport Brush from '../tools/Brush';\r\nimport Circle from '../tools/Circle';\r\nimport Line from '../tools/Line';\r\nimport Rect from '../tools/Rect';\r\nimport '../styles/toolbar.scss';\r\n\r\nconst ToolBar = () => {\r\n    const [activeButton, setActiveButton] = useState(1);\r\n\r\n    const changeColor = (e) => {\r\n        toolState.setStrokeColor(e.target.value);\r\n        toolState.setFillColor(e.target.value);\r\n    }\r\n\r\n    const downloadHandler = () => {\r\n        const a = document.createElement('a');\r\n        a.href = canvasState.canvas.toDataURL();\r\n        a.download = canvasState.sessionid + '.jpg';\r\n        a.click();\r\n    }\r\n\r\n    const openFileHandler = () => {\r\n        const input = document.createElement('input');\r\n        input.type = 'file';\r\n        input.accept = \"image/jpeg,image/png,image/bmp\";\r\n        input.onchange = e => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                canvasState.setLocalFile(reader.result);\r\n            }\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n        input.click();\r\n    }\r\n\r\n    const setTool = (e, isEraser) => {\r\n        setActiveButton(+e.target.parentNode.getAttribute('index'));\r\n\r\n        let object = Brush;\r\n        const name = e.target.getAttribute('name');\r\n\r\n        if (name === 'Brush') object = Brush;\r\n        else if (name === 'Rect') object = Rect;\r\n        else if (name === 'Circle') object = Circle;\r\n        else if (name === 'Line') object = Line;\r\n\r\n        toolState.setTool(new object(canvasState.canvas, canvasState.socket, canvasState.sessionid, isEraser));\r\n    }\r\n\r\n    return (\r\n        <div className='toolbar'>\r\n            <button index='1' className={`toolbar__btn ${activeButton === 1 ? 'active' : ''}`}>\r\n                <i className=\"material-icons\"\r\n                    name='Brush'\r\n                    onClick={e => setTool(e)}>brush</i>\r\n            </button>\r\n            <button index='2' className={`toolbar__btn ${activeButton === 2 ? 'active' : ''}`}>\r\n                <i className=\"material-icons\"\r\n                    name='Rect'\r\n                    onClick={e => setTool(e)}>check_box_outline_blank</i>\r\n            </button>\r\n            <button index='3' className={`toolbar__btn ${activeButton === 3 ? 'active' : ''}`}>\r\n                <i className=\"material-icons\"\r\n                    name='Circle'\r\n                    onClick={e => setTool(e)}>panorama_fish_eye</i>\r\n            </button>\r\n            <button index='4' className={`toolbar__btn ${activeButton === 4 ? 'active' : ''}`}>\r\n                <i className=\"material-icons\"\r\n                    name='Brush'\r\n                    onClick={e => setTool(e, true)}>format_paint</i>\r\n            </button>\r\n            <button index='5' className={`toolbar__btn ${activeButton === 5 ? 'active' : ''}`}>\r\n                <i className=\"material-icons\"\r\n                    name='Line'\r\n                    onClick={e => setTool(e)}>remove</i>\r\n            </button>\r\n            <i className=\"material-icons\" style={{ marginLeft: '10px' }}>color_lens</i>\r\n            <input onChange={e => changeColor(e)} type='color' />\r\n            <button\r\n                className='toolbar__btn'\r\n                onClick={openFileHandler}\r\n                style={{ marginLeft: 'auto' }}>\r\n                <i className=\"material-icons\">folder_open</i>\r\n            </button>\r\n            {/* <button\r\n                className='toolbar__btn'\r\n                onClick={() => canvasState.undo()}>\r\n                <i className=\"material-icons\">chevron_left</i>\r\n            </button>\r\n            <button\r\n                className='toolbar__btn'\r\n                onClick={() => canvasState.redo()}>\r\n                <i className=\"material-icons\">chevron_right</i>\r\n            </button> */}\r\n            <button\r\n                className='toolbar__btn'\r\n                onClick={downloadHandler}>\r\n                <i className=\"material-icons\">save</i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToolBar;","export const originURL = 'https://kalina-paint-server.herokuapp.com';\r\n// export const originURL = 'http://localhost:5000';","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport canvasState from '../store/canvasState';\r\nimport toolState from '../store/toolState';\r\nimport Brush from '../tools/Brush';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Rect from '../tools/Rect';\r\nimport axios from 'axios';\r\nimport Circle from '../tools/Circle';\r\nimport Line from '../tools/Line';\r\nimport { originURL } from '../store/instances';\r\nimport '../styles/canvas.scss';\r\n\r\nconst Canvas = observer(() => {\r\n    const canvasRef = useRef(null);\r\n    const canvasWrapperRef = useRef(null);\r\n    const canvasFieldRef = useRef(null);\r\n    const [canvasSize, setCanvasSize] = useState({ width: 520, height: 420 });\r\n    const params = useParams();\r\n\r\n    const setImage = (image) => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        const img = new Image();\r\n        img.src = image;\r\n        img.crossOrigin = \"anonymous\";\r\n        img.onload = () => {\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            setCanvasSize({ width: img.width + 20, height: img.height + 20 });\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n            postImageHandler();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        canvasState.setCanvas(canvasRef.current);\r\n        axios.get(`${originURL}/image?id=${params.id}`)\r\n            .then(res => setImage(res.data))\r\n            .catch(_ => canvasBG());\r\n\r\n        canvasWrapperRef.current.onmousedown = () => {\r\n            let flag = 0;\r\n            let isMouseDown = true;\r\n            new ResizeObserver(() => ++flag).observe(canvasWrapperRef.current);\r\n\r\n            //////////////переделать\r\n            window.onmouseup = () => {\r\n                isMouseDown = false;\r\n                if (flag > 1) {\r\n                    const { width, height } = canvasWrapperRef.current.style;\r\n                    canvasState.socket.send(JSON.stringify({\r\n                        method: 'resize',\r\n                        id: canvasState.sessionid,\r\n                        size: { width, height }\r\n                    }));\r\n                }\r\n            }\r\n\r\n            if (!isMouseDown) window.onmouseup = null;\r\n        }\r\n    }, []);\r\n\r\n    const canvasBG = () => {\r\n        const ctx = canvasRef.current.getContext('2d');\r\n        let tempColor = ctx.fillStyle;\r\n        ctx.fillStyle = \"white\";\r\n        ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        ctx.fillStyle = tempColor;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const socket = new WebSocket(originURL.replace(/^http/, 'ws'));\r\n        canvasState.setSocket(socket);\r\n        canvasState.setSessionId(params.id);\r\n        toolState.setTool(new Brush(canvasRef.current, socket, params.id));\r\n        socket.onopen = () => {\r\n            console.log('connected');\r\n            socket.send(JSON.stringify({\r\n                id: params.id,\r\n                username: 'anonymous',\r\n                method: 'connection'\r\n            }));\r\n        }\r\n        socket.onmessage = e => {\r\n            let msg = JSON.parse(e.data)\r\n            switch (msg.method) {\r\n                case 'connection':\r\n                    console.log(msg.username + ' connected');\r\n                    break;\r\n                case 'draw':\r\n                    drawHandler(msg);\r\n                    break;\r\n                case 'resize':\r\n                    resizeCanvas(msg.size);\r\n                    break;\r\n                case 'local_file':\r\n                    setImage(msg.file);\r\n                    break;\r\n                default: break;\r\n            }\r\n        }\r\n    }, [canvasState.username]);\r\n\r\n    useEffect(() => {\r\n        if (canvasState.localFile) {\r\n            canvasState.socket.send(JSON.stringify({\r\n                method: 'local_file',\r\n                id: canvasState.sessionid,\r\n                file: canvasState.localFile\r\n            }));\r\n        }\r\n    }, [canvasState.localFile]);\r\n\r\n    const resizeCanvas = (size) => {\r\n        const canvas = canvasRef.current;\r\n        canvasWrapperRef.current.style.width = size.width;\r\n        canvasWrapperRef.current.style.height = size.height;\r\n        canvas.width = +size.width.replace('px', '') - 20;\r\n        canvas.height = +size.height.replace('px', '') - 20;\r\n        axios.get(`${originURL}/image?id=${params.id}`)\r\n            .then(res => {\r\n                const img = new Image();\r\n                img.crossOrigin = \"anonymous\";\r\n                img.src = res.data;\r\n                const ctx = canvas.getContext('2d');\r\n                img.onload = () => {\r\n                    let x = Math.round((canvas.width - img.width) / 2);\r\n                    let y = Math.round((canvas.height - img.height) / 2);\r\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n                    canvasBG();\r\n                    ctx.drawImage(img, x, y, img.width, img.height);\r\n                    postImageHandler();\r\n                }\r\n            })\r\n    }\r\n\r\n    const drawHandler = (msg) => {\r\n        const { type, x, y, x2, y2, width, height, radius, color, lineWidth, strokeStyle, isEraser } = msg.figure;\r\n        const ctx = canvasRef.current.getContext('2d');\r\n        switch (type) {\r\n            case 'brush':\r\n                Brush.draw(ctx, x, y, color, lineWidth, strokeStyle, isEraser);\r\n                break;\r\n            case 'line':\r\n                Line.draw(ctx, x, y, x2, y2, color, lineWidth, strokeStyle);\r\n                break;\r\n            case 'rect':\r\n                Rect.draw(ctx, x, y, width, height, color, lineWidth, strokeStyle);\r\n                break;\r\n            case 'circle':\r\n                Circle.draw(ctx, x, y, radius, color, lineWidth, strokeStyle);\r\n                break;\r\n            case 'finish':\r\n                ctx.beginPath();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const mouseDownHandler = () => {\r\n        canvasState.pushToUndo(canvasRef.current.toDataURL());\r\n    }\r\n\r\n    const mouseUpHandler = () => postImageHandler();\r\n\r\n    const postImageHandler = () => {\r\n        axios.post(`${originURL}/image?id=${params.id}`, { image: canvasRef.current.toDataURL() });\r\n    }\r\n\r\n    // const connectHandler = () => {\r\n    //     canvasState.setUserName(usernameRef.current.value);\r\n    //     setModal(false);\r\n    // }\r\n\r\n    return (\r\n        <div className='canvas' ref={canvasFieldRef}>\r\n            <div\r\n                ref={canvasWrapperRef}\r\n                className='resize'\r\n                style={{ width: canvasSize.width, height: canvasSize.height }}\r\n            >\r\n                <canvas\r\n                    ref={canvasRef}\r\n                    onMouseDown={mouseDownHandler}\r\n                    onMouseUp={mouseUpHandler}\r\n                    width={canvasSize.width - 20}\r\n                    height={canvasSize.height - 20} />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Canvas;","import SettingBar from './components/SettingBar';\nimport ToolBar from './components/ToolBar';\nimport Canvas from './components/Canvas';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport './styles/app.scss';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Switch>\n          <Route path='/:id'>\n            <ToolBar />\n            <SettingBar />\n            <Canvas />\n          </Route>\n          <Redirect to={`f${(+new Date()).toString(16)}`} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}