{"version":3,"sources":["store/toolState.js","components/SettingBar.jsx","store/canvasState.js","tools/Tool.js","tools/Brush.js","tools/Circle.js","tools/Line.js","tools/Rect.js","components/ToolBar.jsx","store/instances.js","components/Canvas.jsx","App.js","index.js"],"names":["tool","strokeStyle","makeAutoObservable","this","color","fillColor","width","lineWidth","SettingBar","observer","className","htmlFor","type","id","style","margin","defaultValue","min","max","onChange","e","toolState","setLineWidth","target","value","setStrokeColor","canvas","socket","sessionid","undoList","redoList","username","data","push","ctx","getContext","length","dataUrl","pop","toDataURL","img","Image","src","onload","clearRect","height","drawImage","Tool","destroyEvents","fillStyle","onmousemove","onmouseup","onmousedown","onmouseleave","Brush","isEraser","finishDraw","mouseDown","send","JSON","stringify","method","figure","mouseMoveHadler","bind","mouseDownHadler","beginPath","moveTo","pageX","offsetLeft","pageY","offsetTop","x","y","tempColor","tempStroke","tempWidth","lineTo","stroke","Circle","drawing","startX","startY","radius","saved","currentX","currentY","Math","sqrt","pow","rerender","arc","PI","fill","Line","x2","y2","x1","y1","Rect","w","h","rect","ToolBar","onClick","setTool","canvasState","marginLeft","setFillColor","changeColor","undo","redo","a","document","createElement","href","download","body","appendChild","click","removeChild","originURL","Canvas","canvasRef","useRef","usernameRef","canvasWrapperRef","useState","modal","setModal","canvasSize","setCanvasSize","params","useParams","useEffect","setCanvas","current","axios","get","then","res","crossOrigin","catch","err","canvasBG","fillRect","WebSocket","replace","setSocket","setSessionId","onopen","console","log","onmessage","msg","parse","drawHandler","resizeCanvas","size","flag","ResizeObserver","observe","resizeCanvasReq","post","image","draw","mouseUpHandler","Modal","show","onHide","Header","Title","Body","ref","Footer","Button","variant","setUserName","onMouseDown","pushToUndo","onMouseUp","App","path","to","Date","toString","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.084bb6fa.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\nclass ToolState {\r\n    tool = null;\r\n    strokeStyle = '#000000'; \r\n    \r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setTool(tool) {\r\n        this.tool = tool;\r\n    }\r\n\r\n    setFillColor(color) {\r\n        this.tool.fillColor = color;\r\n    }\r\n\r\n    setStrokeColor(color) {\r\n        this.strokeStyle = color;\r\n        this.tool.strokeStyle = this.strokeStyle;\r\n    }\r\n\r\n    setLineWidth(width) {\r\n        this.tool.lineWidth = width;\r\n    }\r\n}\r\n    \r\nexport default new ToolState();","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport toolState from '../store/toolState';\r\nimport '../styles/toolbar.scss';\r\n\r\nconst SettingBar = observer(() => {\r\n    return (\r\n        <div className={'toolbar settingbar'}>\r\n            <label htmlFor=\"line-width\">Line width</label>\r\n            <input \r\n                type=\"number\" \r\n                id=\"line-width\" \r\n                style={{margin: '0 10px'}} \r\n                defaultValue={1} \r\n                min={1} max={50}\r\n                onChange={e => toolState.setLineWidth(e.target.value)} />\r\n            <label htmlFor=\"stroke-color\">Stroke color</label>\r\n            <input \r\n                type=\"color\" \r\n                id=\"stroke-color\" \r\n                style={{margin: '0 10px'}} \r\n                onChange={e => toolState.setStrokeColor(e.target.value)}\r\n                value={toolState.strokeStyle} \r\n                />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default SettingBar;","import { makeAutoObservable } from \"mobx\";\r\n\r\nclass CanvasState {\r\n    canvas = null;\r\n    socket = null;\r\n    sessionid = null;\r\n    undoList = [];\r\n    redoList = [];\r\n    username = '';\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setUserName(username) {\r\n        this.username = username;\r\n    }\r\n\r\n    setSocket(socket) {\r\n        this.socket = socket;\r\n    }\r\n\r\n    setSessionId(sessionid) {\r\n        this.sessionid = sessionid;\r\n    }\r\n\r\n    setCanvas(canvas) {\r\n        this.canvas = canvas;\r\n    }\r\n\r\n    pushToUndo(data) {\r\n        this.undoList.push(data);\r\n    }\r\n\r\n    pushToRedo(data) {\r\n        this.redoList.push(data);\r\n    }\r\n\r\n    undo() {\r\n        let ctx = this.canvas.getContext('2d');\r\n        if (this.undoList.length > 0) {\r\n            let dataUrl = this.undoList.pop();\r\n            this.redoList.push(this.canvas.toDataURL());\r\n            let img = new Image();\r\n            img.src = dataUrl;\r\n            img.onload = () => {\r\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n            }\r\n        } else {\r\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        }\r\n    }\r\n\r\n    redo() {\r\n        let ctx = this.canvas.getContext('2d');\r\n        if (this.redoList.length > 0) {\r\n            let dataUrl = this.redoList.pop();\r\n            this.undoList.push(this.canvas.toDataURL());\r\n            let img = new Image();\r\n            img.src = dataUrl;\r\n            img.onload = () => {\r\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n            }\r\n        }\r\n    }\r\n}\r\n    \r\nexport default new CanvasState();","export default class Tool {\r\n    constructor(canvas, socket, id){\r\n        this.canvas = canvas;\r\n        this.socket = socket;\r\n        this.id = id;\r\n        this.ctx = canvas.getContext('2d');\r\n        this.destroyEvents();\r\n    }\r\n\r\n    set fillColor(color) {\r\n        this.ctx.fillStyle = color;\r\n    }\r\n\r\n    set strokeStyle(color) {\r\n        this.ctx.strokeStyle = color;\r\n    }\r\n\r\n    set lineWidth(width) {\r\n        this.ctx.lineWidth = width;\r\n    }\r\n\r\n    destroyEvents() {\r\n        this.canvas.onmousemove = null;\r\n        this.canvas.onmouseup = null;\r\n        this.canvas.onmousedown = null;\r\n        this.canvas.onmouseleave = null;\r\n    }\r\n}","import Tool from \"./Tool\";\r\n\r\nclass Brush extends Tool {\r\n    constructor(canvas, socket, id, isEraser) {\r\n        super(canvas, socket, id);\r\n        this.isEraser = isEraser;\r\n        this.canvas.onmousemove = this.mouseMoveHadler.bind(this);\r\n        this.canvas.onmouseup = this.finishDraw.bind(this);\r\n        this.canvas.onmousedown = this.mouseDownHadler.bind(this);\r\n        this.canvas.onmouseleave = this.finishDraw.bind(this);\r\n    }\r\n\r\n    finishDraw = () => {\r\n        this.mouseDown = false;\r\n        this.socket.send(JSON.stringify({\r\n            method: 'draw',\r\n            id: this.id,\r\n            figure: {\r\n                type: 'finish'\r\n            }\r\n        }));\r\n    }\r\n\r\n    mouseDownHadler(e) {\r\n        this.mouseDown = true;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop);\r\n    }\r\n\r\n    mouseMoveHadler(e) {\r\n        if(this.mouseDown) {\r\n            this.socket.send(JSON.stringify({\r\n                method: 'draw',\r\n                id: this.id,\r\n                figure: {\r\n                    type: 'brush',\r\n                    x: e.pageX - e.target.offsetLeft,\r\n                    y: e.pageY - e.target.offsetTop,\r\n                    color: this.ctx.fillStyle,\r\n                    lineWidth: this.ctx.lineWidth,\r\n                    strokeStyle: this.ctx.strokeStyle,\r\n                    isEraser: this.isEraser\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    static draw(ctx, x, y, color, lineWidth, strokeStyle, isEraser) {\r\n        let tempColor = ctx.fillStyle; \r\n        let tempStroke = ctx.strokeStyle;\r\n        let tempWidth = ctx.lineWidth;\r\n        \r\n        if(isEraser) {\r\n            ctx.fillStyle = 'white';\r\n            ctx.strokeStyle = 'white';\r\n        } else {\r\n            ctx.fillStyle = color;\r\n            ctx.strokeStyle = strokeStyle;\r\n        }\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.lineTo(x, y);\r\n        ctx.stroke();\r\n        ctx.fillStyle = tempColor;\r\n        ctx.strokeStyle = tempStroke;\r\n        ctx.lineWidth = tempWidth;\r\n    }\r\n}\r\n\r\nexport default Brush;","import Tool from \"./Tool\";\r\n\r\nclass Circle extends Tool {\r\n    constructor(canvas, socket, id) {\r\n        super(canvas, socket, id);\r\n        this.drawing = false;\r\n        this.canvas.onmousemove = this.mouseMoveHadler.bind(this);\r\n        this.canvas.onmouseup = this.finishDraw.bind(this);\r\n        this.canvas.onmousedown = this.mouseDownHadler.bind(this);\r\n        this.canvas.onmouseleave = this.finishDraw.bind(this);\r\n    }\r\n\r\n    finishDraw = () => {\r\n        this.mouseDown = false;\r\n        if(this.drawing)\r\n            this.socket.send(JSON.stringify({\r\n                method: 'draw',\r\n                id: this.id,\r\n                figure: {\r\n                    type: 'circle',\r\n                    x: this.startX,\r\n                    y: this.startY,\r\n                    radius: this.radius,\r\n                    color: this.ctx.fillStyle,\r\n                    lineWidth: this.ctx.lineWidth,\r\n                    strokeStyle: this.ctx.strokeStyle\r\n                }\r\n            }));\r\n        this.drawing = false;\r\n    }\r\n\r\n    mouseDownHadler(e) {\r\n        this.mouseDown = true;\r\n        this.ctx.beginPath();\r\n        this.startX = e.pageX - e.target.offsetLeft;\r\n        this.startY = e.pageY - e.target.offsetTop;\r\n        this.saved = this.canvas.toDataURL();\r\n    }\r\n\r\n    mouseMoveHadler(e) {\r\n        if(this.mouseDown) {\r\n            this.drawing = true;\r\n            let currentX = e.pageX - e.target.offsetLeft;\r\n            let currentY = e.pageY - e.target.offsetTop;\r\n            this.radius = Math.sqrt(Math.pow(currentX - this.startX, 2) + Math.pow(currentY - this.startY, 2));\r\n            this.rerender(this.startX, this.startY, this.radius);\r\n        }\r\n    }\r\n\r\n    rerender(x, y, radius) {\r\n        const img = new Image();\r\n        img.src = this.saved;\r\n        img.onload = () => {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n            this.ctx.fill();\r\n            this.ctx.stroke();\r\n        }\r\n    }\r\n    \r\n    static draw(ctx, x, y, radius, color, lineWidth, strokeStyle) {\r\n        let tempColor = ctx.fillStyle; \r\n        let tempStroke = ctx.strokeStyle;\r\n        let tempWidth = ctx.lineWidth;\r\n        \r\n        ctx.fillStyle = color;\r\n        ctx.strokeStyle = strokeStyle;\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = tempColor;\r\n        ctx.strokeStyle = tempStroke;\r\n        ctx.lineWidth = tempWidth;\r\n    }\r\n}\r\n\r\nexport default Circle;","import Tool from \"./Tool\";\r\n\r\nclass Line extends Tool {\r\n    constructor(canvas, socket, id) {\r\n        super(canvas, socket, id);\r\n        this.drawing = false;\r\n        this.canvas.onmousemove = this.mouseMoveHadler.bind(this);\r\n        this.canvas.onmouseup = this.finishDraw.bind(this);\r\n        this.canvas.onmousedown = this.mouseDownHadler.bind(this);\r\n        this.canvas.onmouseleave = this.finishDraw.bind(this);\r\n    }\r\n\r\n    finishDraw = () => {\r\n        this.mouseDown = false;\r\n        if(this.drawing)\r\n            this.socket.send(JSON.stringify({\r\n                method: 'draw',\r\n                id: this.id,\r\n                figure: {\r\n                    type: 'line',\r\n                    x: this.startX,\r\n                    y: this.startY,\r\n                    x2: this.currentX,\r\n                    y2: this.currentY,\r\n                    color: this.ctx.fillStyle,\r\n                    lineWidth: this.ctx.lineWidth,\r\n                    strokeStyle: this.ctx.strokeStyle\r\n                }\r\n            }));\r\n        this.drawing = false;\r\n    }\r\n\r\n    mouseDownHadler(e) {\r\n        this.mouseDown = true;\r\n        this.ctx.beginPath();\r\n        this.startX = e.pageX - e.target.offsetLeft;\r\n        this.startY = e.pageY - e.target.offsetTop;\r\n        this.saved = this.canvas.toDataURL();\r\n    }\r\n\r\n    mouseMoveHadler(e) {\r\n        if(this.mouseDown) {\r\n            this.drawing = true;\r\n            this.currentX = e.pageX - e.target.offsetLeft;\r\n            this.currentY = e.pageY - e.target.offsetTop;\r\n            this.rerender(this.startX, this.startY, this.currentX, this.currentY);\r\n        }\r\n    }\r\n\r\n    rerender(x1, y1, x2, y2) {\r\n        const img = new Image();\r\n        img.src = this.saved;\r\n        img.onload = () => {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(x1, y1);\r\n            this.ctx.lineTo(x2, y2);\r\n            this.ctx.stroke();\r\n        }\r\n    }\r\n\r\n    static draw(ctx, x1, y1, x2, y2, color, lineWidth, strokeStyle) {\r\n        let tempColor = ctx.fillStyle; \r\n        let tempStroke = ctx.strokeStyle;\r\n        let tempWidth = ctx.lineWidth;\r\n        \r\n        ctx.fillStyle = color;\r\n        ctx.strokeStyle = strokeStyle;\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x1, y1);\r\n        ctx.lineTo(x2, y2);\r\n        ctx.stroke();\r\n        ctx.fillStyle = tempColor;\r\n        ctx.strokeStyle = tempStroke;\r\n        ctx.lineWidth = tempWidth;\r\n    }\r\n}\r\n\r\nexport default Line;","import Tool from \"./Tool\";\r\n\r\nclass Rect extends Tool {\r\n    constructor(canvas, socket, id) {\r\n        super(canvas, socket, id);\r\n        this.drawing = false;\r\n        this.canvas.onmousemove = this.mouseMoveHadler.bind(this);\r\n        this.canvas.onmouseup = this.finishDraw.bind(this);\r\n        this.canvas.onmousedown = this.mouseDownHadler.bind(this);\r\n        this.canvas.onmouseleave = this.finishDraw.bind(this);\r\n    }\r\n\r\n    finishDraw = () => {\r\n        this.mouseDown = false;\r\n        if(this.drawing)\r\n            this.socket.send(JSON.stringify({\r\n                method: 'draw',\r\n                id: this.id,\r\n                figure: {\r\n                    type: 'rect',\r\n                    x: this.startX,\r\n                    y: this.startY,\r\n                    width: this.width,\r\n                    height: this.height,\r\n                    color: this.ctx.fillStyle,\r\n                    lineWidth: this.ctx.lineWidth,\r\n                    strokeStyle: this.ctx.strokeStyle\r\n                }\r\n            }));\r\n        this.drawing = false;\r\n    }\r\n\r\n    mouseDownHadler(e) {\r\n        this.mouseDown = true;\r\n        this.ctx.beginPath();\r\n        this.startX = e.pageX - e.target.offsetLeft;\r\n        this.startY = e.pageY - e.target.offsetTop;\r\n        this.saved = this.canvas.toDataURL();\r\n    }\r\n\r\n    mouseMoveHadler(e) {\r\n        if(this.mouseDown) {\r\n            this.drawing = true;\r\n            let currentX = e.pageX - e.target.offsetLeft;\r\n            let currentY = e.pageY - e.target.offsetTop;\r\n            this.width = currentX - this.startX; \r\n            this.height = currentY - this.startY; \r\n            this.rerender(this.startX, this.startY, this.width, this.height);\r\n        }\r\n    }\r\n\r\n    rerender(x, y, w, h) {\r\n        const img = new Image();\r\n        img.src = this.saved;\r\n        img.onload = () => {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\r\n            this.ctx.beginPath();\r\n            this.ctx.rect(x, y, w, h);\r\n            this.ctx.fill();\r\n            this.ctx.stroke();\r\n        }\r\n    }\r\n    \r\n    static draw(ctx, x, y, w, h, color, lineWidth, strokeStyle) {\r\n        let tempColor = ctx.fillStyle; \r\n        let tempStroke = ctx.strokeStyle;\r\n        let tempWidth = ctx.lineWidth;\r\n        \r\n        ctx.fillStyle = color;\r\n        ctx.strokeStyle = strokeStyle;\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.beginPath();\r\n        ctx.rect(x, y, w, h);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.fillStyle = tempColor;\r\n        ctx.strokeStyle = tempStroke;\r\n        ctx.lineWidth = tempWidth;\r\n    }\r\n}\r\n\r\nexport default Rect;","import React from 'react';\r\nimport canvasState from '../store/canvasState';\r\nimport toolState from '../store/toolState';\r\nimport '../styles/toolbar.scss';\r\nimport Brush from '../tools/Brush';\r\nimport Circle from '../tools/Circle';\r\nimport Line from '../tools/Line';\r\nimport Rect from '../tools/Rect';\r\n\r\nconst ToolBar = () => {\r\n    const changeColor = (e) => {\r\n        toolState.setStrokeColor(e.target.value);\r\n        toolState.setFillColor(e.target.value);\r\n    }\r\n\r\n    const download = () => {\r\n        const a = document.createElement('a');\r\n        a.href = canvasState.canvas.toDataURL();\r\n        a.download = canvasState.sessionid + '.jpg';\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n    }\r\n\r\n    return (\r\n        <div className='toolbar'>\r\n            <button \r\n                className='toolbar__btn' \r\n                onClick={() => toolState.setTool(new Brush(canvasState.canvas, canvasState.socket, canvasState.sessionid))}>\r\n                <i className=\"material-icons\">brush</i>\r\n            </button>\r\n            <button \r\n                className='toolbar__btn' \r\n                onClick={() => toolState.setTool(new Rect(canvasState.canvas, canvasState.socket, canvasState.sessionid))}>\r\n                <i className=\"material-icons\">check_box_outline_blank</i>\r\n            </button>\r\n            <button \r\n                className='toolbar__btn' \r\n                onClick={() => toolState.setTool(new Circle(canvasState.canvas, canvasState.socket, canvasState.sessionid))}>\r\n                <i className=\"material-icons\">panorama_fish_eye</i>\r\n            </button>\r\n            <button \r\n                className='toolbar__btn' \r\n                onClick={() => toolState.setTool(new Brush(canvasState.canvas, canvasState.socket, canvasState.sessionid, true))}>\r\n                <i className=\"material-icons\">format_paint</i>\r\n            </button>\r\n            <button \r\n                className='toolbar__btn' \r\n                onClick={() => toolState.setTool(new Line(canvasState.canvas, canvasState.socket, canvasState.sessionid))}>\r\n                <i className=\"material-icons\">remove</i>\r\n            </button>\r\n            <i className=\"material-icons\" style={{marginLeft: '10px'}}>color_lens</i>\r\n            <input onChange={e => changeColor(e)} type='color' />\r\n            <button \r\n                className='toolbar__btn' \r\n                onClick={() => canvasState.undo()}\r\n                style={{marginLeft: 'auto'}}>\r\n                <i className=\"material-icons\">chevron_left</i>\r\n            </button>\r\n            <button \r\n                className='toolbar__btn' \r\n                onClick={() => canvasState.redo()}>\r\n                <i className=\"material-icons\">chevron_right</i>\r\n            </button>\r\n            <button \r\n                className='toolbar__btn' \r\n                onClick={download}>\r\n                <i className=\"material-icons\">save</i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToolBar;","export const originURL = 'https://kalina-paint-server.herokuapp.com';\r\n// export const originURL = 'http://localhost:5000';","import { Button, Modal } from 'react-bootstrap';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport canvasState from '../store/canvasState';\r\nimport toolState from '../store/toolState';\r\nimport '../styles/canvas.scss';\r\nimport Brush from '../tools/Brush';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Rect from '../tools/Rect';\r\nimport axios from 'axios';\r\nimport Circle from '../tools/Circle';\r\nimport Line from '../tools/Line';\r\nimport {originURL} from '../store/instances';\r\n\r\nconst Canvas = observer(() => {\r\n    const canvasRef = useRef(null);\r\n    const usernameRef = useRef(null);\r\n    const canvasWrapperRef = useRef(null);\r\n    const [modal, setModal] = useState(true);\r\n    const [canvasSize, setCanvasSize] = useState({});\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        canvasState.setCanvas(canvasRef.current);\r\n        const ctx = canvasRef.current.getContext('2d');\r\n        axios.get(`${originURL}/image?id=${params.id}`)\r\n        .then(res => {\r\n            const img = new Image();\r\n            img.src = res.data;\r\n            // img.src = cloudinaryGetURL + params.id + '.png';\r\n            img.crossOrigin = \"anonymous\";\r\n            img.onload = () => {\r\n                canvasRef.current.width = img.width;\r\n                canvasRef.current.height = img.height;\r\n                setCanvasSize({ width: img.width + 20, height: img.height + 20 });\r\n                ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n                ctx.drawImage(img, 0, 0, canvasRef.current.width, canvasRef.current.height);\r\n            }\r\n        })\r\n        .catch(err => canvasBG(ctx));\r\n    }, []);\r\n\r\n    const canvasBG = (ctx) => {\r\n        let tempColor = ctx.fillStyle;\r\n        ctx.fillStyle = \"white\";\r\n        ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n        ctx.fillStyle = tempColor;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const socket = new WebSocket(originURL.replace(/^http/, 'ws'));\r\n        canvasState.setSocket(socket);\r\n        canvasState.setSessionId(params.id);\r\n        toolState.setTool(new Brush(canvasRef.current, socket, params.id));\r\n        socket.onopen = () => {\r\n            console.log('connected');\r\n            socket.send(JSON.stringify({\r\n                id: params.id,\r\n                username: canvasState.username || 'default',\r\n                method: 'connection'\r\n            }));\r\n        }\r\n        socket.onmessage = (e) => {\r\n            let msg = JSON.parse(e.data)\r\n            switch (msg.method) {\r\n                case 'connection':\r\n                    console.log(msg.username + ' connected');\r\n                    break;\r\n                case 'draw':\r\n                    drawHandler(msg);\r\n                    break;\r\n                case 'resize':\r\n                    resizeCanvas(msg.size);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }, [canvasState.username]);\r\n\r\n    useEffect(() => {\r\n        canvasWrapperRef.current.onmousedown = () => {\r\n            let flag = 0;\r\n            new ResizeObserver(() => ++flag).observe(canvasWrapperRef.current);\r\n\r\n            canvasWrapperRef.current.onmouseup = () => flag > 1 ? resizeCanvasReq() : false;\r\n        }\r\n    }, []);\r\n\r\n    const resizeCanvasReq = () => {\r\n        canvasState.socket.send(JSON.stringify({\r\n            method: 'resize',\r\n            id: canvasState.sessionid,\r\n            size: {\r\n                width: +canvasWrapperRef.current.style.width.replace('px', ''),\r\n                height: +canvasWrapperRef.current.style.height.replace('px', '')\r\n            }\r\n        }));\r\n    }\r\n\r\n    const resizeCanvas = (size) => {\r\n        canvasWrapperRef.current.style.width = size.width + 'px';\r\n        canvasWrapperRef.current.style.height = size.height + 'px';\r\n        canvasRef.current.width = size.width - 20;\r\n        canvasRef.current.height = size.height - 20;\r\n        // axios.get(`https://kalina-paint.herokuapp.com/image?id=${params.id}`)\r\n        axios.get(`${originURL}/image?id=${params.id}`)\r\n            .then(res => {\r\n                const img = new Image();\r\n                // img.src = cloudinaryGetURL + params.id + '.png';\r\n                img.crossOrigin = \"anonymous\";\r\n                img.src = res.data;\r\n                const ctx = canvasRef.current.getContext('2d');\r\n                img.onload = () => {\r\n                    let x = (canvasRef.current.width - img.width) / 2;\r\n                    let y = (canvasRef.current.height - img.height) / 2;\r\n                    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n                    canvasBG(ctx);\r\n                    ctx.drawImage(img, x, y, img.width, img.height);\r\n                    axios.post(`${originURL}/image?id=${params.id}`, { image: canvasRef.current.toDataURL() })\r\n                }\r\n            })\r\n    }\r\n\r\n    const drawHandler = (msg) => {\r\n        const { type, x, y, x2, y2, width, height, radius, color, lineWidth, strokeStyle, isEraser } = msg.figure;\r\n        const ctx = canvasRef.current.getContext('2d');\r\n        switch (type) {\r\n            case 'brush':\r\n                Brush.draw(ctx, x, y, color, lineWidth, strokeStyle, isEraser);\r\n                break;\r\n            case 'line':\r\n                Line.draw(ctx, x, y, x2, y2, color, lineWidth, strokeStyle);\r\n                break;\r\n            case 'rect':\r\n                Rect.draw(ctx, x, y, width, height, color, lineWidth, strokeStyle);\r\n                break;\r\n            case 'circle':\r\n                Circle.draw(ctx, x, y, radius, color, lineWidth, strokeStyle);\r\n                break;\r\n            case 'finish':\r\n                ctx.beginPath();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const mouseDownHandler = () => {\r\n        canvasState.pushToUndo(canvasRef.current.toDataURL());\r\n    }\r\n\r\n    const mouseUpHandler = async () => {\r\n        axios.post(`${originURL}/image?id=${params.id}`, { image: canvasRef.current.toDataURL() })\r\n        // axios.post(`http://localhost:5000/image?id=${params.id}`, {img: canvasRef.current.toDataURL()});\r\n\r\n        // const formData = new FormData();\r\n        // formData.append('file', canvasRef.current.toDataURL().replace('image/png', 'image/octet-stream'));\r\n        // formData.append('upload_preset', 'kalina-why-not');\r\n        // formData.append('cloud_name', 'kalina-why-not');\r\n        // formData.append('public_id', `paint/${params.id}`);\r\n        // formData.append('overwrite', true);\r\n        // await fetch(cloudinaryPostURL, { method: 'POST', body: formData })\r\n        // .then(res => res.json())\r\n        // .then(data => {\r\n        //     console.log(data);\r\n        // })\r\n        // .catch(e => console.dir(e))\r\n    }\r\n\r\n    const connectHandler = () => {\r\n        canvasState.setUserName(usernameRef.current.value);\r\n        setModal(false);\r\n    }\r\n\r\n    return (\r\n        <div className='canvas'>\r\n            <Modal show={modal} onHide={() => { }}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Enter your name</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <input type=\"text\" ref={usernameRef} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={connectHandler}>\r\n                        Sign in\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <div\r\n                ref={canvasWrapperRef}\r\n                className='resize'\r\n                style={{ width: canvasSize.width, height: canvasSize.height }}\r\n            >\r\n                <canvas\r\n                    ref={canvasRef}\r\n                    onMouseDown={mouseDownHandler}\r\n                    onMouseUp={mouseUpHandler} />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Canvas;","import SettingBar from './components/SettingBar';\nimport ToolBar from './components/ToolBar';\nimport Canvas from './components/Canvas';\nimport './styles/app.scss';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Switch>\n          <Route path='/:id'>\n            <ToolBar />\n            <SettingBar />\n            <Canvas />\n          </Route>\n          <Redirect to={`f${(+new Date()).toString(16)}`} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}